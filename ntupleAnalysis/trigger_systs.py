import numpy as np
# RunII rereco, trigger scale factors (SFs)
# Trigger scale factors for use without HLT applied in MC
# https://github.com/cms-analysis/flashgg/tree/dev_legacy_runII/Systematics/python/flashggDiPhotonSystematics201?_cfi.py

def getTrgSF(r9, abs_eta, pt, order, year, shift):

    if year == '2016':
        return getTrgSF2016(r9, abs_eta, pt, order, shift)

    elif year == '2017':
        return getTrgSF2017(r9, abs_eta, pt, order, shift)

    elif year == '2018':
        return getTrgSF2018(r9, abs_eta, pt, order, shift)

    else:
        # Do not apply trg SFs
        return 1.

# 2018: https://raw.githubusercontent.com/cms-analysis/flashgg/dev_legacy_runII/Systematics/python/flashggDiPhotonSystematics2018_cfi.py
def getTrgSF2018(r9, abs_eta, pt, order, shift):

    if order == 0:

        # leading/seeded photon
        ptBounds = np.array([0.0, 35.0, 37.0, 40.0, 45.0, 50.0, 60.0, 70.0, 90.0, 99999.])
        ib = np.argwhere(pt > ptBounds)[-1]

        if r9 < 0.54:
            #seeded leg, R9 turn-on (0.50-0.54), cat2, barrel
            SFs = [
                0.8020693032,
                0.9155469694,
                0.9266209669,
                0.9295708491,
                0.9303265907,
                0.9416725453,
                0.9503439663,
                0.9574423947,
                0.9523387414
                ]
            Uncerts = [
                (0.0108370679,0.0108370679),
                (0.0042798703,0.0042798703),
                (0.0020932481,0.0020932481),
                (0.0012322936,0.0012322936),
                (0.0024324819,0.0024324819),
                (0.0057677517,0.0057677517),
                (0.0143137857,0.0143137857),
                (0.0120714856,0.0120714856),
                (0.0267745254,0.0267745254)
                ]
        elif (0.54 <= r9) and (r9 < 0.85):
            #seeded leg, R9 plateau (0.54-0.85), cat2, barrel
            SFs = [
                0.8524002552,
                0.9476119412,
                0.9537999031,
                0.9606177455,
                0.9652220994,
                0.9677140340,
                0.9714560889,
                0.9792025583,
                0.9846367363
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0012234955,0.0012234955),
                (0.0021872047,0.0021872047),
                (0.0016488000,0.0016488000)
                ]
        elif r9 >= 0.85:
            #seeded leg, cat0 (R9>0.85), barrel
            SFs = [
                0.8855419724,
                0.9599693694,
                0.9665558231,
                0.9729324583,
                0.9784734824,
                0.9806145301,
                0.9814731790,
                0.9830517669,
                0.9903382393
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0012218737,0.0012218737),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000)
                ]
        else:
            raise Exception('Unknown r9: %f'%r9)

    elif order == 1:

        # subleading/unseeded photon
        ptBounds = np.array([0.0, 28.0, 31.0, 35.0, 40.0, 45.0, 50.0, 60.0, 70.0, 90.0, 999999])
        ib = np.argwhere(pt > ptBounds)[-1]

        if r9 < 0.54:
            #unseeded leg, R9 turn-on (0.50-0.54), cat2, barrel
            SFs = [
                0.8884153471,
                0.9517603567,
                0.9690496396,
                0.9717160162,
                0.9796815413,
                0.9843574751,
                0.9844776733,
                0.9873999094,
                0.9933255120,
                0.9804395842
                ]
            Uncerts = [
                (0.0035078397,0.0035078397),
                (0.0012683293,0.0012683293),
                (0.0014644761,0.0014644761),
                (0.0013420893,0.0013420893),
                (0.0010000000,0.0010000000),
                (0.0019132259,0.0019132259),
                (0.0040644219,0.0040644219),
                (0.0053801091,0.0053801091),
                (0.0063638347,0.0063638347),
                (0.0310825604,0.019560)
                ]
        elif (0.54 <= r9) and (r9 < 0.85):
            #unseeded leg, R9 plateau (0.54-0.85), cat2, barrel
            SFs = [
                0.9184639454,
                0.9950437401,
                0.9917999437,
                0.9939153322,
                0.9947390674,
                0.9945127334,
                0.9953081007,
                0.9968578311,
                0.9956645030,
                0.9957331016
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0024445012,0.0024445012),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000)
                ]
        elif r9 >= 0.85:
            #unseeded leg, cat0 (R9>0.85), barrel
            SFs = [
                0.9482245748,
                0.9999020755,
                0.9999120130,
                0.9999573970,
                0.9999830622,
                0.9999880454,
                0.9999938661,
                0.9999867470,
                0.9999972153,
                0.9999550063
                ]
            Uncerts = [
                (0.0024089227,0.0024089227),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0026996598,0.0026996598),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000)
                ]

    else:
        raise Exception('Unknown order: %s'%str(order))

    sf = np.array(SFs)[ib][0]
    err_lo = np.array(Uncerts)[ib][0][0]
    err_hi = np.array(Uncerts)[ib][0][1]
    if shift == 'nom':
        return sf
    elif shift == 'dn':
        return sf*(1.-err_lo)
    elif shift == 'up':
        return sf*(1.+err_hi)
    else:
        raise Exception('Unknown trg SF syst shift: %s'%shift)

# 2017: https://raw.githubusercontent.com/cms-analysis/flashgg/dev_legacy_runII/Systematics/python/flashggDiPhotonSystematics2017_cfi.py
def getTrgSF2017(r9, abs_eta, pt, order, shift):

    if order == 0:

        # leading/seeded photon
        ptBounds = np.array([0.0, 37, 40.0, 45.0, 50.0, 60.0, 70.0, 90.0, 99999999.])
        ib = np.argwhere(pt > ptBounds)[-1]

        if r9 < 0.54:
            #seeded leg, R9 turn-on (0.50-0.54), cat2, barrel
            SFs = [
                0.9204369513,
                0.9268543618,
                0.9296864506,
                0.9312181087,
                0.9349061049,
                0.9425532022,
                0.9347621741,
                0.9489236873,
                ]
            Uncerts = [
                (0.0015550248,0.0015550248),
                (0.0012001964,0.0012001964),
                (0.0010500218,0.0010500218),
                (0.0016928371,0.0016928371),
                (0.0024479457,0.0024479457),
                (0.0052975139,0.0052975139),
                (0.0089854906,0.0089854906),
                (0.0177143070,0.0177143070)
                ]
        elif (0.54 <= r9) and (r9 < 0.85):
            #seeded leg, R9 plateau (0.54-0.85), cat2, barrel
            SFs = [
                0.9505374744,
                0.9559316002,
                0.9603227460,
                0.9628461917,
                0.9662884361,
                0.9715136996,
                0.9753661262,
                0.9818196687
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000)
                ]
        elif r9 >= 0.85:
            #seeded leg, cat0 (R9>0.85), barrel
            SFs = [
                0.9630117411,
                0.9680310533,
                0.9721152461,
                0.9748189645,
                0.9747597366,
                0.9753162174,
                0.9803243059,
                0.9865482764
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000)
                ]
        else:
            raise Exception('Unknown r9: %f'%r9)

    elif order == 1:

        # subleading/unseeded photon
        ptBounds = np.array([0.0, 28.0, 31.0, 35.0, 40.0, 45.0, 50.0, 60.0, 70.0, 90.0, 99999999.])
        ib = np.argwhere(pt > ptBounds)[-1]

        if r9 < 0.54:
            #unseeded leg, R9 turn-on (0.50-0.54), cat2, barrel
            SFs = [
                0.9503915847,
                0.9563040539,
                0.9554701294,
                0.9573495211,
                0.9615640328,
                0.9635847522,
                0.9613424282,
                0.9531798460,
                0.9427949472,
                0.9180892383
                ]
            Uncerts = [
                (0.0014203590,0.0014203590),
                (0.0011666773,0.0011666773),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0012149116,0.0012149116),
                (0.0018398439,0.0018398439),
                (0.0046295174,0.0046295174),
                (0.0082547803,0.0082547803),
                (0.0210727517,0.0210727517)
                ]
        elif (0.54 <= r9) and (r9 < 0.85):
            #unseeded leg, R9 plateau (0.54-0.85), cat2, barrel
            SFs = [
                0.9821722615,
                0.9846684256,
                0.9853409044,
                0.9851741151,
                0.9847237955,
                0.9836985511,
                0.9818687985,
                0.9793978257,
                0.9766027088,
                0.9723314370
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0011171683,0.0011171683)
                ]
        elif r9 >= 0.85:
            #unseeded leg, cat0 (R9>0.85), barrel
            SFs = [
                0.9997101832,
                0.9998675478,
                0.9999351175,
                0.9999541560,
                0.9999645283,
                0.9999677894,
                0.9999665309,
                0.9999602573,
                0.9999369329,
                0.9999456063
                ]
            Uncerts = [
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000),
                (0.0010000000,0.0010000000)
                ]

    else:
        raise Exception('Unknown order: %s'%str(order))

    sf = np.array(SFs)[ib][0]
    err_lo = np.array(Uncerts)[ib][0][0]
    err_hi = np.array(Uncerts)[ib][0][1]
    if shift == 'nom':
        return sf
    elif shift == 'dn':
        return sf*(1.-err_lo)
    elif shift == 'up':
        return sf*(1.+err_hi)
    else:
        raise Exception('Unknown trg SF syst shift: %s'%shift)

# 2016: https://raw.githubusercontent.com/cms-analysis/flashgg/dev_legacy_runII/Systematics/python/flashggDiPhotonSystematics2016_cfi.py
def getTrgSF2016(r9, abs_eta, pt, order, shift):

    if order == 0:

        # leading/seeded photon
        ptBounds = np.array([0.0, 33.3333, 35.0, 40.0, 45.0, 50.0, 60.0, 70.0, 90.0, 99999999.])
        ib = np.argwhere(pt > ptBounds)[-1]

        if r9 < 0.54:
            #seeded leg, R9 turn-on (0.50-0.54), cat2, barrel
            SFs = [
                0.59825812412,
                0.653756261564,
                0.683431664312,
                0.710022589532,
                0.730570707514,
                0.751603284508,
                0.788168324479,
                0.827941857065,
                0.783051501808
                ]
            Uncerts = [
                (0.00402725234934, 0.00402725234934),
                (0.0099055319024, 0.0099055319024),
                (0.00554805412963, 0.00554805412963),
                (0.00532044177457, 0.00532044177457),
                (0.00371231458923, 0.00371231458923),
                (0.0096076672755, 0.0096076672755),
                (0.0224762460948, 0.0224762460948),
                (0.0252561959982, 0.0252561959982),
                (0.0585125120425, 0.0585125120425)
                ]
        elif (0.54 <= r9) and (r9 < 0.85):
            #seeded leg, R9 plateau (0.54-0.85), cat2, barrel
            SFs = [
                0.895998413691,
                0.953053304133,
                0.963043242302,
                0.968461390346,
                0.972040191424,
                0.974762665083,
                0.980444525098,
                0.985215654176,
                0.990441809012,
                ]
            Uncerts = [
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.00109371653612, 0.00109371653612),
                (0.001, 0.001),
                (0.00116568181032, 0.00116568181032)
                ]
        elif r9 >= 0.85:
            #seeded leg, cat0 (R9>0.85), barrel
            SFs = [
                0.913564877899,
                0.970947331321,
                0.976527980646,
                0.981419518931,
                0.985854458442,
                0.986833495137,
                0.985750212762,
                0.989860818686,
                0.992375919183
                ]
            Uncerts = [
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001)
                ]
        else:
            raise Exception('Unknown r9: %f'%r9)

    elif order == 1:

        # subleading/unseeded photon
        ptBounds = np.array([0.0, 22.5, 25.0, 27.5, 30.0, 32.5, 35.0, 40.0, 45.0, 50.0, 60.0, 70.0, 90.0, 99999999.])
        ib = np.argwhere(pt > ptBounds)[-1]

        if r9 < 0.54:
            #unseeded leg, R9 turn-on (0.50-0.54), cat2, barrel
            SFs = [
                0.603067311807,
                0.624492850153,
                0.648788979569,
                0.654133439859,
                0.676589314263,
                0.683202863128,
                0.704606499829,
                0.732923798151,
                0.755447011273,
                0.770751155231,
                0.790198511256,
                0.833694375128,
                0.795746634733,
                ]
            Uncerts = [
                (0.00796165968882, 0.00796165968882),
                (0.00926893494893, 0.00926893494893),
                (0.00643750002229, 0.00643750002229),
                (0.00560733004707, 0.00560733004707),
                (0.00478261673364, 0.00478261673364),
                (0.00602767084288, 0.00602767084288),
                (0.00491050256218, 0.00491050256218),
                (0.00526686396656, 0.00526686396656),
                (0.00360816189604, 0.00360816189604),
                (0.00941141936066, 0.00941141936066),
                (0.0221609073824, 0.0221609073824),
                (0.0245645104497, 0.0245645104497),
                (0.061430899873, 0.061430899873)
                ]
        elif (0.54 <= r9) and (r9 < 0.85):
            #unseeded leg, R9 plateau (0.54-0.85), cat2, barrel
            SFs = [
                0.985693698514,
                0.98720784946,
                0.990136850966,
                0.990703680436,
                0.991401108045,
                0.991139606368,
                0.990594834177,
                0.992264476341,
                0.99215428945,
                0.991657615297,
                0.992376937273,
                0.99132752396,
                0.992327711897,
                ]
            Uncerts = [
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001)
                ]
        elif r9 >= 0.85:
            #unseeded leg, cat0 (R9>0.85), barrel
            SFs = [
                0.991761096067,
                0.99209301576,
                0.995650862874,
                0.997325955916,
                0.99777623069,
                0.998034021176,
                0.998504649133,
                0.999197866395,
                0.999484680768,
                0.999525695621,
                0.999489148388,
                0.999586900113,
                0.99976876111,
                ]
            Uncerts = [
                (0.00255160879609, 0.00255160879609),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001),
                (0.001, 0.001)
                ]

    else:
        raise Exception('Unknown order: %s'%str(order))

    #print(np.array(SFs).shape)
    #print(np.array(SFs)[ib])
    #print(np.array(Uncerts).shape)
    #print(np.array(Uncerts)[ib])
    #print(np.array(Uncerts)[ib][0][0])
    #print(np.array(Uncerts)[ib][0][1])
    sf = np.array(SFs)[ib][0]
    err_lo = np.array(Uncerts)[ib][0][0]
    err_hi = np.array(Uncerts)[ib][0][1]
    if shift == 'nom':
        return sf
    elif shift == 'dn':
        return sf*(1.-err_lo)
    elif shift == 'up':
        return sf*(1.+err_hi)
    else:
        raise Exception('Unknown trg SF syst shift: %s'%shift)

#def getTrgSF(r9, abs_eta, pt, order, year='2016', shift='nom'):
#
#    if order == 0:
#        return getTrgSF2016_lead(r9, abs_eta, pt, year, shift)
#    elif order == 1:
#        return getTrgSF2016_sublead(r9, abs_eta, pt, year, shift)
#    else:
#        raise Exception('Unknown pt order: %d'%order)
#
#
##getTrgSF(r9=0.9, abs_eta=1.4, pt=20., order=1, year='2016')
##getTrgSF(r9=0.5, abs_eta=1.4, pt=100., order=1, year='2016')
#getTrgSF(r9=0.54, abs_eta=1.4, pt=100., order=0, year='2016')
